version: 29
imports:
- projectPath: Templates
  revision: 0.0.5
jobs:
- name: Maven CI
  steps:
  - !UseTemplateStep
    name: maven build & deploy
    templateName: Tigase Server - Maven build & deploy
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: Set build version (for publication)
    buildVersion: '@file:buildVersion@-@file:target/build-version@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: Publish to S3
    runInContainer: true
    image: tigase/devops-1dev-builder-image:latest
    interpreter: !DefaultInterpreter
      commands: "#set -x\nexport AWS_ACCESS_KEY_ID=@secret:tigase.aws.access-key-id@\nexport AWS_SECRET_ACCESS_KEY=@secret:tigase.aws.secret-access-key@\nexport AWS_DEFAULT_REGION=@secret:tigase.aws.default-region@\n\n\nexport DIST_URL_ROOT=s3://build.tigase.net-new\nexport DIST_DIR=${DIST_URL_ROOT}/nightlies/dists\n\nSOURCE_DIR=target/_dist\nCOMPONENT=tigase-server\n\nexport DATE=$(date +%Y-%m-%d)\nVERSION=@file:buildVersion@\n\nls -lah\nls -lah target\n\nBUILD_VERSION=@file:target/build-version@\n\n# Restored original naming convention\naws s3 cp ${SOURCE_DIR}/ ${DIST_DIR}/${DATE}/ --recursive --exclude=\"*\" --include=\"${COMPONENT}-*\"\n#aws s3 cp ${SOURCE_DIR}/ ${DIST_DIR}/${DATE}-${VERSION}-${BUILD_VERSION}/ --recursive --exclude=\"*\" --include=\"${COMPONENT}-*\"\n\n#git remote update\n#git fetch\n\n#GIT_HEAD=\"$(git rev-parse 'HEAD')\"\n#GIT_ORIGIN_MASTER=\"$(git rev-parse 'origin/master')\"\n#\n#echo \"GIT_HEAD: ${GIT_HEAD}\"\n#echo \"GIT_ORIGIN_MASTER: ${GIT_ORIGIN_MASTER}\"\n#\n\n# Let's assume this job will be run only on master branch\n#if [ \"${GIT_HEAD}\" = \"${GIT_ORIGIN_MASTER}\" ] ; then\n\techo \"master build, setting up 'latest' links for nightlies\"\n\tfor file in ${SOURCE_DIR}/${COMPONENT}-*;\n\t\tdo aws s3 cp $file ${DIST_DIR}/latest/$(echo \"$file\" | sed \"s/^.*\\/$COMPONENT-.*b[[:digit:]]*/$COMPONENT/\");\n\tdone\n#fi\n\n#set +x\n"
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishArtifactStep
    name: Publish artifacts
    sourcePath: target/_dist/
    artifacts: '*'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !ScheduleTrigger
    cronExpression: 0 0 1 * * ?
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: Push to GitHub
  steps:
  - !PushRepository
    name: Push to GitHub
    remoteUrl: https://github.com/tigase/tigase-server-distribution.git
    passwordSecret: access-token
    force: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: GA-Release
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !UseTemplateStep
    name: maven build & deploy
    templateName: Tigase Server - Maven build & deploy
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: Set build version (for publication)
    buildVersion: '@file:buildVersion@-@file:target/build-version@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishArtifactStep
    name: Publish artifacts
    artifacts: '*'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !TagCreateTrigger
    tags: tigase-server*
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: nightly (old - do not use)
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: detect build version
    runInContainer: true
    image: maven:3-eclipse-temurin-17
    interpreter: !DefaultInterpreter
      commands: |
        echo "Detecting project version (may require some time while downloading maven dependencies)..."
        echo $(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout) > buildVersion
        echo $(date +%Y-%m-%d) > todaysDate
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: maven build & deploy
    runInContainer: true
    image: tigase/tigase-maven-docker:3-temurin-17
    interpreter: !DefaultInterpreter
      commands: |
        mvn -version
        mvn -Pdist -Dtigase.internalrepo.username=@secret:maven-deploy-username@ -Dtigase.internalrepo.password=@secret:maven-deploy-password@ clean test deploy


        ls -lah
        ls -lah target
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: set build version
    buildVersion: '@file:buildVersion@-@file:target/build-version@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: publish to s3
    runInContainer: true
    image: tigase/devops-1dev-builder-image:latest
    interpreter: !DefaultInterpreter
      commands: "#set -x\nexport AWS_ACCESS_KEY_ID=@secret:aws-access-key-id@\nexport AWS_SECRET_ACCESS_KEY=@secret:aws-secret-access-key@\nexport AWS_DEFAULT_REGION=@secret:aws-default-region@\n\n\nexport DIST_URL_ROOT=s3://build.tigase.net-new\nexport DIST_DIR=${DIST_URL_ROOT}/nightlies/dists-1dev\n\nSOURCE_DIR=target/_dist\nCOMPONENT=tigase-server\n\nexport DATE=$(date +%Y-%m-%d)\nVERSION=@file:buildVersion@\n\nls -lah\nls -lah target\n\nBUILD_VERSION=@file:target/build-version@\n\naws s3 cp ${SOURCE_DIR}/ ${DIST_DIR}/${DATE}-${VERSION}-${BUILD_VERSION}/ --recursive --exclude=\"*\" --include=\"${COMPONENT}-*\"\n\ngit remote update\ngit fetch\n\nGIT_HEAD=\"$(git rev-parse 'HEAD')\"\nGIT_ORIGIN_MASTER=\"$(git rev-parse 'origin/master')\"\n\necho \"GIT_HEAD: ${GIT_HEAD}\"\necho \"GIT_ORIGIN_MASTER: ${GIT_ORIGIN_MASTER}\"\n\n\nif [ \"${GIT_HEAD}\" = \"${GIT_ORIGIN_MASTER}\" ] ; then\n\techo \"master build, setting up 'latest' links for nightlies\"\n\tfor file in ${SOURCE_DIR}/${COMPONENT}-*;\n\t\tdo aws s3 cp $file ${DIST_DIR}/latest/$(echo \"$file\" | sed \"s/^.*\\/$COMPONENT-.*b[[:digit:]]*/$COMPONENT/\");\n\tdone\nfi\n\n#set +x\n"
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishArtifactStep
    name: Publish artifacts
    sourcePath: target/_dist/
    artifacts: '*'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
